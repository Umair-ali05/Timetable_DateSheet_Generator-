// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Timetable_DateSheet_Generator.Data.DbContext;

namespace Timetable_DateSheet_Generator.Data.AppMigration
{
    [DbContext(typeof(Timetable_DateSheet_Context))]
    [Migration("20220516154613_TimeTable_DateSheet_Migration")]
    partial class TimeTable_DateSheet_Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Address")
                        .HasColumnName("Address")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("Experience")
                        .HasColumnName("Experience")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Image")
                        .HasColumnName("Image")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("Skills")
                        .HasColumnName("Skills")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AttendanceID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttendanceCreditHours")
                        .HasColumnName("AttendanceCreditHours")
                        .HasColumnType("int");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnName("AttendanceDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnName("Last_Modified")
                        .HasColumnType("datetime");

                    b.Property<int>("OfferedCourseID")
                        .HasColumnName("OfferedCourseID")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasColumnName("User")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AttendanceID");

                    b.HasIndex("OfferedCourseID");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Buildings", b =>
                {
                    b.Property<int>("BuildingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BuildingID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasColumnName("BuildingName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("InstituteID")
                        .HasColumnName("InstituteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnName("Last_Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("User")
                        .HasColumnName("User")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BuildingID");

                    b.HasIndex("InstituteID");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Departments", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnName("DepartmentName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("InstituteID")
                        .HasColumnName("InstituteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnName("Last_Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("User")
                        .HasColumnName("User")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DepartmentID");

                    b.HasIndex("InstituteID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.FacultyMemberAvailabilities", b =>
                {
                    b.Property<int>("FacultyMemberAvailabilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FacultyMemberAvailabilityID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FacultyMemberID")
                        .HasColumnName("FacultyMemberID")
                        .HasColumnType("int");

                    b.Property<int>("TimeID")
                        .HasColumnName("TimeID")
                        .HasColumnType("int");

                    b.HasKey("FacultyMemberAvailabilityID");

                    b.HasIndex("FacultyMemberID");

                    b.HasIndex("TimeID");

                    b.ToTable("FacultyMemberAvailabilities");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.FacultyMembers", b =>
                {
                    b.Property<int>("FacultyMemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FacultyMemberID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentID")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnName("Last_Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("User")
                        .HasColumnName("User")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserID")
                        .HasColumnName("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FacultyMemberID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("FacultyMembers");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Institutes", b =>
                {
                    b.Property<int>("InstituteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InstituteID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InstituteName")
                        .IsRequired()
                        .HasColumnName("InstituteName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnName("Last_Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("User")
                        .HasColumnName("User")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("InstituteID");

                    b.ToTable("Institutes");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.OfferedCourses", b =>
                {
                    b.Property<int>("OfferedCourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OfferedCourseID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentID")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("FacultyMemberID")
                        .HasColumnName("FacultyMemberID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnName("Last_Modified")
                        .HasColumnType("datetime");

                    b.Property<int>("OfferedCourseCategory")
                        .HasColumnName("OfferedCourseCategory")
                        .HasColumnType("int");

                    b.Property<decimal>("OfferedCourseContactHours")
                        .HasColumnName("OfferedCourseContactHours")
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal>("OfferedCourseCreditHours")
                        .HasColumnName("OfferedCourseCreditHours")
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("OfferedCourseSection")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)))
                        .HasColumnName("OfferedCourseSection")
                        .HasColumnType("char(1)");

                    b.Property<int>("OfferedCourseSemesterNo")
                        .HasColumnName("OfferedCourseSemesterNo")
                        .HasColumnType("int");

                    b.Property<int>("OfferedCourseSpecial")
                        .HasColumnName("OfferedCourseSpecial")
                        .HasColumnType("int");

                    b.Property<string>("OfferedCourseTitle")
                        .IsRequired()
                        .HasColumnName("OfferedCourseTitle")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProgramID")
                        .HasColumnName("ProgramID")
                        .HasColumnType("int");

                    b.Property<int>("SemesterID")
                        .HasColumnName("SemesterID")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasColumnName("User")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OfferedCourseID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("FacultyMemberID");

                    b.HasIndex("ProgramID");

                    b.HasIndex("SemesterID");

                    b.ToTable("OfferedCourses");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.OfferedCourseTimeSlots", b =>
                {
                    b.Property<int>("OfferedCourseTimeSlotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OfferedCourseTimeSlotID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OfferedCourseID")
                        .HasColumnName("OfferedCourseID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnName("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("TimeSlotID")
                        .HasColumnName("TimeSlotID")
                        .HasColumnType("int");

                    b.HasKey("OfferedCourseTimeSlotID");

                    b.HasIndex("OfferedCourseID");

                    b.HasIndex("RoomID");

                    b.HasIndex("TimeSlotID");

                    b.ToTable("OfferedCourseTimeSlots");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.ProgramRegularTimings", b =>
                {
                    b.Property<int>("ProgramRegularTimingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProgramRegularTimingID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProgramID")
                        .HasColumnName("ProgramID")
                        .HasColumnType("int");

                    b.Property<int>("TimeID")
                        .HasColumnName("TimeID")
                        .HasColumnType("int");

                    b.HasKey("ProgramRegularTimingID");

                    b.HasIndex("ProgramID");

                    b.HasIndex("TimeID");

                    b.ToTable("ProgramRegularTimings");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Programs", b =>
                {
                    b.Property<int>("ProgramID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProgramID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentID")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnName("Last_Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnName("ProgramName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("User")
                        .HasColumnName("User")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProgramID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.ProgramSpecialTimings", b =>
                {
                    b.Property<int>("ProgramSpecialTimingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProgramSpecialTimingID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProgramID")
                        .HasColumnName("ProgramID")
                        .HasColumnType("int");

                    b.Property<int>("TimeID")
                        .HasColumnName("TimeID")
                        .HasColumnType("int");

                    b.HasKey("ProgramSpecialTimingID");

                    b.HasIndex("ProgramID");

                    b.HasIndex("TimeID");

                    b.ToTable("ProgramSpecialTimings");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.RegisteredCourses", b =>
                {
                    b.Property<int>("RegisteredCourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RegisteredCourseID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OfferedCourseID")
                        .HasColumnName("OfferedCourseID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnName("StudentID")
                        .HasColumnType("int");

                    b.HasKey("RegisteredCourseID");

                    b.HasIndex("OfferedCourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("RegisteredCourses");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.RoomAvailibilities", b =>
                {
                    b.Property<int>("RoomAvailibilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoomAvailibilityID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentID")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnName("RoomID")
                        .HasColumnType("int");

                    b.Property<int>("TimeID")
                        .HasColumnName("TimeID")
                        .HasColumnType("int");

                    b.HasKey("RoomAvailibilityID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("RoomID");

                    b.HasIndex("TimeID");

                    b.ToTable("RoomAvailibilities");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Rooms", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoomID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingID")
                        .HasColumnName("BuildingID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnName("Last_Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnName("RoomName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RoomType")
                        .HasColumnName("RoomType")
                        .HasColumnType("int");

                    b.Property<int>("SeatingCapacity")
                        .HasColumnName("SeatingCapacity")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasColumnName("User")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoomID");

                    b.HasIndex("BuildingID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Semesters", b =>
                {
                    b.Property<int>("SemesterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SemesterID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnName("Last_Modified")
                        .HasColumnType("datetime");

                    b.Property<int>("SemesterType")
                        .HasColumnName("SemesterType")
                        .HasColumnType("int");

                    b.Property<int>("SemesterYear")
                        .HasColumnName("SemesterYear")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasColumnName("User")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SemesterID");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.StudentAttendance", b =>
                {
                    b.Property<long>("StudentAttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudentAttendanceID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttendanceID")
                        .HasColumnName("AttendanceID")
                        .HasColumnType("int");

                    b.Property<bool>("IsPresent")
                        .HasColumnName("IsPresent")
                        .HasColumnType("bit");

                    b.Property<int>("RegisteredCourseID")
                        .HasColumnName("RegisteredCourseID")
                        .HasColumnType("int");

                    b.HasKey("StudentAttendanceID");

                    b.HasIndex("AttendanceID");

                    b.HasIndex("RegisteredCourseID");

                    b.ToTable("StudentAttendance");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Students", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnName("Last_Modified")
                        .HasColumnType("datetime");

                    b.Property<int>("ProgarmID")
                        .HasColumnName("ProgarmID")
                        .HasColumnType("int");

                    b.Property<string>("StudentEnrollment")
                        .IsRequired()
                        .HasColumnName("StudentEnrollment")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("User")
                        .HasColumnName("User")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserID")
                        .HasColumnName("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StudentID");

                    b.HasAlternateKey("StudentEnrollment");

                    b.HasIndex("ProgarmID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Times", b =>
                {
                    b.Property<int>("TimeID")
                        .HasColumnName("TimeID")
                        .HasColumnType("int");

                    b.Property<int>("FinishTime")
                        .HasColumnName("FinishTime")
                        .HasColumnType("int");

                    b.Property<int>("StartTime")
                        .HasColumnName("StartTime")
                        .HasColumnType("int");

                    b.Property<int>("TimeWeekDay")
                        .HasColumnName("TimeWeekDay")
                        .HasColumnType("int");

                    b.HasKey("TimeID");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.TimeSlots", b =>
                {
                    b.Property<int>("TimeSlotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TimeSlotID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TimeID")
                        .HasColumnName("TimeID")
                        .HasColumnType("int");

                    b.Property<int>("TimeTableID")
                        .HasColumnName("TimeTableID")
                        .HasColumnType("int");

                    b.HasKey("TimeSlotID");

                    b.HasIndex("TimeID");

                    b.HasIndex("TimeTableID");

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.TimeTables", b =>
                {
                    b.Property<int>("TimeTableID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TimeTableID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InstituteID")
                        .HasColumnName("InstituteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Last_Modified")
                        .HasColumnName("Last_Modified")
                        .HasColumnType("datetime");

                    b.Property<int>("SemesterID")
                        .HasColumnName("SemesterID")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasColumnName("User")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TimeTableID");

                    b.HasIndex("InstituteID");

                    b.HasIndex("SemesterID");

                    b.ToTable("TimeTables");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Attendance", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.OfferedCourses", "OfferedCourse")
                        .WithMany("Attendances")
                        .HasForeignKey("OfferedCourseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Buildings", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Institutes", "Institute")
                        .WithMany("Buildings")
                        .HasForeignKey("InstituteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Departments", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Institutes", "Institute")
                        .WithMany("Departments")
                        .HasForeignKey("InstituteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.FacultyMemberAvailabilities", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.FacultyMembers", "FacultyMember")
                        .WithMany("FacultyMemberAvailabilities")
                        .HasForeignKey("FacultyMemberID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.Times", "Time")
                        .WithMany("FacultyMemberAvailabilities")
                        .HasForeignKey("TimeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.FacultyMembers", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Departments", "Department")
                        .WithMany("FacultyMembers")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.OfferedCourses", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Departments", "Department")
                        .WithMany("OfferedCourses")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.FacultyMembers", "FacultyMember")
                        .WithMany("OfferedCourses")
                        .HasForeignKey("FacultyMemberID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.Programs", "Program")
                        .WithMany("OfferedCourses")
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.Semesters", "Semester")
                        .WithMany("OfferedCourses")
                        .HasForeignKey("SemesterID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.OfferedCourseTimeSlots", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.OfferedCourses", "OfferedCourse")
                        .WithMany("OfferedCourseTimeSlots")
                        .HasForeignKey("OfferedCourseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.Rooms", "Room")
                        .WithMany("OfferedCourseTimeSlots")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.TimeSlots", "TimeSlots")
                        .WithMany("OfferedCourseTimeSlots")
                        .HasForeignKey("TimeSlotID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.ProgramRegularTimings", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Programs", "Program")
                        .WithMany("ProgramRegularTimings")
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.Times", "Time")
                        .WithMany("ProgramRegularTimings")
                        .HasForeignKey("TimeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Programs", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Departments", "Department")
                        .WithMany("Programs")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.ProgramSpecialTimings", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Programs", "Program")
                        .WithMany("ProgramSpecialTimings")
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.Times", "Time")
                        .WithMany("ProgramSpecialTimings")
                        .HasForeignKey("TimeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.RegisteredCourses", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.OfferedCourses", "OfferedCourse")
                        .WithMany("RegisteredCourses")
                        .HasForeignKey("OfferedCourseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.Students", "Student")
                        .WithMany("RegisteredCourses")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.RoomAvailibilities", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Departments", "Department")
                        .WithMany("RoomAvailibilities")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.Rooms", "Room")
                        .WithMany("RoomAvailibilities")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.Times", "Time")
                        .WithMany("RoomAvailibilities")
                        .HasForeignKey("TimeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Rooms", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Buildings", "Building")
                        .WithMany("Rooms")
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.StudentAttendance", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Attendance", "Attendance")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("AttendanceID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.RegisteredCourses", "RegisteredCourse")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("RegisteredCourseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.Students", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Programs", "Program")
                        .WithMany("Students")
                        .HasForeignKey("ProgarmID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.TimeSlots", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Times", "Time")
                        .WithMany("TimeSlots")
                        .HasForeignKey("TimeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.TimeTables", "TimeTable")
                        .WithMany("TimeSlots")
                        .HasForeignKey("TimeTableID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetable_DateSheet_Generator.Models.TimeTables", b =>
                {
                    b.HasOne("Timetable_DateSheet_Generator.Models.Institutes", "Institute")
                        .WithMany("TimeTables")
                        .HasForeignKey("InstituteID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetable_DateSheet_Generator.Models.Semesters", "Semester")
                        .WithMany("TimeTables")
                        .HasForeignKey("SemesterID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
