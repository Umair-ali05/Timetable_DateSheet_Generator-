@model IEnumerable<Timetable_DateSheet_Generator.Models.ViewModels.RegisterViewModel>
@using Microsoft.AspNetCore.Identity;
@using Timetable_DateSheet_Generator.Data.DbContext;
@inject SignInManager<ApplicationUser> signInManager
@inject Timetable_DateSheet_Context Context
@{
    ViewData["Title"] = "Students";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="create"></div>
<div id="edit"></div>
<div id="delete"></div>
<div id="view"></div>
<div id="pass"></div>
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1><i style="color:#17a2b8" class="fa fa-user-secret"></i> Administrators</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="~/Administration/Dashboard/View">Dashboard</a></li>
                    <li class="breadcrumb-item active">Administrators</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <!-- /.card -->
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">List of administrators are shown below:</h3>
                        <button class="btn btn-info float-right" id="crtBtn" onclick="LoadCreate()"><i class="fa fa-plus"></i> Add New Administrator</button>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <table id="example1" class="table table-bordered ">
                            <thead class="table-avatar" style="color:#656565;text-align:center">
                                <tr>
                                    <th style="font-weight:400"><i style="color:#17a2b8" class="fa fa-sort-numeric-down"></i> #</th>
                                    <th style="font-weight:400"><i style="color:#17a2b8" class="fa fa-user-secret"></i> Name</th>
                                    <th style="font-weight:400"><i style="color:#17a2b8" class="fa fa-envelope"></i> Email</th>
                                    <th style="font-weight:400"><i style="color:#17a2b8" class="fa fa-check"></i> Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int i = 0;
                                }
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @(i + 1)
                                                                                        
                                        </td>
                                        <td>
                                            @if (string.IsNullOrEmpty(item.path))
                                            {
                                                <img src="~/dist/img/user.png" class="img-circle" height="40" width="40" />
                                            }
                                            else
                                            {

                                                <img src="@item.path" class=" img-circle" height="40" width="40">
                                            }
                                            @item.Name
                                        </td>
                                        <td>
                                           <i><a href="#">@item.UserEmail</a></i> 
                                        </td>
                                        <td class="project-actions text-right">
                                            <button class="btn btn-outline-primary btn-sm" onclick="this.disabled = true;LoadPass('@item.ID');this.disabled=false;">
                                                <i class="fas fa-key">
                                                </i>
                                                Change
                                            </button>
                                            <button class="btn btn-outline-secondary btn-sm" onclick="this.disabled = true; LoadDetails('@item.ID');this.disabled=false;">
                                                <i class="fas fa-folder">
                                                </i>
                                                View
                                            </button>
                                            <button class="btn btn-outline-success btn-sm" onclick="this.disabled = true; LoadEdit('@item.ID');this.disabled=false;">
                                                <i class="fas fa-pencil-alt">
                                                </i>
                                                Edit
                                            </button>
                                            <button class="btn btn-outline-danger btn-sm" onclick="this.disabled = true; LoadDelete('@item.ID');this.disabled=false;">
                                                <i class="fas fa-trash">
                                                </i>
                                                Delete
                                            </button>
                                        </td>
                                    </tr>
                                    i += 1;
                                }
                            </tbody>
                            <tfoot class="table-avatar" style="color:#656565;text-align:center">
                                <tr>
                                    <th style="font-weight:400"><i style="color:#17a2b8" class="fa fa-sort-numeric-up"></i> #</th>
                                    <th style="font-weight:400"><i style="color:#17a2b8" class="fa fa-user-secret"></i> Name</th>
                                    <th style="font-weight:400"><i style="color:#17a2b8" class="fa fa-envelope"></i> Email</th>
                                    <th style="font-weight:400"><i style="color:#17a2b8" class="fa fa-check"></i> Actions</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </div>
    <!-- /.container-fluid -->
</section>

<!-- jQuery -->
<script src="~/plugins/jquery/jquery.min.js"></script>

<script>
    function LoadCreate() {
        $("#create").load("/Administration/Users/Create",
            function (response, status, xhr) {
                document.getElementById('crtBtn').disabled = false;
                if (status == "success") {
                } else if (status == "error" || status == "timeout") {
                    toastr.error('Sorry! An error has occurred. Please try again later');

                } else if (status == "notmodified") {
                    // NOT MODIFIED request (likely cached) //
                    toastr.error('Sorry! An error has occurred. Please try again later');

                } else if (status == "abort") {
                    // ABORTED request //
                    toastr.error('ABORTED request');
                }
            }
        );
        document.getElementById('crtBtn').disabled = false;
    }
    function LoadEdit(ID) {
        $("#edit").load("/Administration/Users/Edit?ID=" + ID,
            function (response, status, xhr) {
                if (status == "success") {
                } else if (status == "error" || status == "timeout") {
                    toastr.error( 'Sorry! An error has occurred. Please try again later');

                } else if (status == "notmodified") {
                    // NOT MODIFIED request (likely cached) //
                    toastr.error('Sorry! An error has occurred. Please try again later');

                } else if (status == "abort") {
                    // ABORTED request //
                    toastr.error('ABORTED request');
                }
            });
    }
    function LoadDelete(ID) {
        $("#delete").load("/Administration/Users/Delete?ID=" + ID,
            function (response, status, xhr) {
                if (status == "success") {
                } else if (status == "error" || status == "timeout") {
                    toastr.error('Sorry! An error has occurred. Please try again later');

                } else if (status == "notmodified") {
                    // NOT MODIFIED request (likely cached) //
                    toastr.error('Sorry! An error has occurred. Please try again later');

                } else if (status == "abort") {
                    // ABORTED request //
                    toastr.error('ABORTED request');
                }
            });
    }
    function LoadDetails(ID) {
        $("#edit").load("/Administration/Users/Details?ID=" + ID,
            function (response, status, xhr) {
                if (status == "success") {
                } else if (status == "error" || status == "timeout") {
                    toastr.error('Sorry! An error has occurred. Please try again later');

                } else if (status == "notmodified") {
                    // NOT MODIFIED request (likely cached) //
                    toastr.error('Sorry! An error has occurred. Please try again later');

                } else if (status == "abort") {
                    // ABORTED request //
                    toastr.error('ABORTED request');
                }
            });
    }
    function LoadPass(ID) {

        $("#pass").load("/Administration/Users/ChangePassword?ID=" + ID,
            function (response, status, xhr) {
                if (status == "success") {
                } else if (status == "error" || status == "timeout") {
                    toastr.error('Sorry! An error has occurred. Please try again later');

                } else if (status == "notmodified") {
                    // NOT MODIFIED request (likely cached) //
                    toastr.error('Sorry! An error has occurred. Please try again later');

                } else if (status == "abort") {
                    // ABORTED request //
                    toastr.error('ABORTED request');
                }
            });
    }

    window.onload = function () {
        var el = document.getElementById("nav_user");
        el.classList.add("navbar-cyan");
        if ('@ViewBag.Action'.toLowerCase() == "Create".toLowerCase()) {

            $("#create").load("/Administration/Users/Create?isNew=n");
        }
        else if ('@ViewBag.Action'.toLowerCase() == "edit".toLowerCase()) {

            $("#edit").load("/Administration/Users/Edit?isValid=n&ID="+'@ViewBag.ID');
        }
            else if ('@ViewBag.Action'.toLowerCase() == "pass".toLowerCase()) {

            $("#pass").load("/Administration/Users/ChangePassword?isValid=n&ID="+'@ViewBag.ID');
        }
        else {

        }
    }
    $(function () {
        if ('@ViewBag.MessageType'.toLowerCase() == "success")
            toastr.success('@ViewBag.Message');
        else if ('@ViewBag.MessageType'.toLowerCase() == "info")
            toastr.info('@ViewBag.Message');
        else if ('@ViewBag.MessageType'.toLowerCase() == "error")
            toastr.error('@ViewBag.Message');
        else if ('@ViewBag.MessageType'.toLowerCase() == "info")
            toastr.warning('@ViewBag.Message');
        else;
        $("#example1").DataTable({
            "responsive": true, "lengthChange": false, "autoWidth": false,
            "buttons": [
                {
                    extend: 'copy',
                    title: 'Users',
                    text: window.copyButtonTrans,
                    exportOptions: {
                        columns: [0,1,2]
                    }
                },
                {
                    extend: 'csv',
                    title: 'Users',
                    text: window.csvButtonTrans,
                    exportOptions: {
                        columns: [0, 1, 2]
                    }
                },
                {
                    extend: 'excel',
                    title: 'Users',
                    text: window.excelButtonTrans,
                    exportOptions: {
                        columns: [0, 1, 2]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Users',
                    text: window.pdfButtonTrans,
                    exportOptions: {
                        columns: [0, 1, 2]
                    }
                },
                {
                    extend: 'print',
                    title: 'Users',
                    text: window.printButtonTrans,
                    exportOptions: {
                        columns: [0, 1, 2]
                    }
                },
                {
                    extend: 'colvis',
                    title: 'Users',
                    text: window.colvisButtonTrans,
                    exportOptions: {
                        columns: [0, 1, 2]
                    }
                },
            ]
        }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
    });
</script>

